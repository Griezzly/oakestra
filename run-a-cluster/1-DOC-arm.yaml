version: "3.3"

services:

  # System Manager REST API of Root Orchestrator
  system_manager:
    image: ghcr.io/edgeio/edgeio/root-system-manager:v0.01.arm
    hostname: system_manager
    container_name: system_manager
    expose:
      - "10000/tcp"
      - "10000/udp"
    ports:
      - "10000:10000/tcp"
      - "10000:10000/udp"
    depends_on:
      - mongo_root
      - cloud_scheduler
      - root_service_manager
    environment:
      - CLOUD_MONGO_URL=mongo
      - CLOUD_MONGO_PORT=10007
      - CLOUD_SCHEDULER_URL=cloud_scheduler
      - CLOUD_SCHEDULER_PORT=10004
      - NET_PLUGIN_URL=root_service_manager
      - NET_PLUGIN_PORT=10099


  # MongoDB in Root Orchestrator
  mongo_root:
    image: mongo:3.6
    container_name: mongo
    hostname: mongo
    ports:
      - "10007:10007"
    expose:
      - "10007"
    volumes:
      - 'mongodb_data:/mongodb'
    command: mongod --port 10007

  # cluster-level mongoDB
  mongo_rootnet:
    image: mongo:3.6
    container_name: mongo_net
    hostname: mongo_net
    ports:
      - "10008:10008"
    volumes:
      - 'mongodb_net_data:/mongodb'
    command: mongod --port 10008


  # Cluster Manager
  root_service_manager:
    image: ghcr.io/edgeio/edgeionet/root-service-manager:v0.03.arm.experimental
    container_name: root_service_manager
    hostname: root_service_manager
    expose:
      - "10099"
    ports:
      - "10099:10099"
    environment:
      - MY_PORT=10099
      - SYSTEM_MANAGER_URL=system_manager
      - SYSTEM_MANAGER_PORT=10000
      - CLOUD_MONGO_URL=mongo_net
      - CLOUD_MONGO_PORT=10008
    depends_on:
      - mongo_rootnet


  # Redis for the Cloud Scheduler
  redis:
    image: redis
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass cloudRedis


  grafana:
    image: grafana/grafana
    hostname: grafana
    container_name: grafana
    ports:
      - 80:3000


  # Cloud Scheduler
  cloud_scheduler:
    image: ghcr.io/edgeio/edgeio/cloud-scheduler:v0.01.arm
    container_name: cloud_scheduler
    hostname: cloud_scheduler
    expose:
      - "10004"
    ports:
      - "10004:10004"
    environment:
      - MY_PORT=10004
      - SYSTEM_MANAGER_URL=system_manager
      - SYSTEM_MANAGER_PORT=10000
      - CLOUD_MONGO_URL=mongo
      - CLOUD_MONGO_PORT=10007
      - REDIS_ADDR=redis://:cloudRedis@redis:6379
    depends_on:
      - redis
      - mongo_root

  # MQTT
  mqtt:
    image: eclipse-mosquitto:1.6
    hostname: mqtt
    container_name: mqtt
    expose:
      - "10003"
    ports:
      - "10003:10003"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /mosquitto/data
      - /mosquitto/log
    healthcheck:
      test: [ "CMD-SHELL", "timeout -t 5 mosquitto_sub -t '$$SYS/#' -C 1 | grep -v Error || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 6


  # cluster-level mongoDB
  mongo_cluster:
    image: mongo:3.6
    container_name: cluster_mongo
    hostname: cluster_mongo
    ports:
      - "10107:10107"
    volumes:
      - 'mongodb_cluster_data:/mongodb'
    command: mongod --port 10107

# cluster-level mongoDB
  mongo_clusternet:
    image: mongo:3.6
    container_name: cluster_mongo_net
    hostname: cluster_mongo_net
    ports:
      - "10108:10108"
    volumes:
      - 'mongodb_cluster_net_data:/mongodb'
    command: mongod --port 10108


# Cluster Manager
  cluster_service_manager:
    image: ghcr.io/edgeio/edgeionet/cluster-service-manager:v0.03.arm.experimental
    container_name: cluster_service_manager
    hostname: cluster_service_manager
    expose:
      - "10110"
    ports:
      - "10110:10110"
    environment:
      - MY_PORT=10110
      - MQTT_BROKER_PORT=10003
      - MQTT_BROKER_URL=mqtt
      - ROOT_SERVICE_MANAGER_URL=root_service_manager
      - ROOT_SERVICE_MANAGER_PORT=10099
      - SYSTEM_MANAGER_URL=system_manager
      - SYSTEM_MANAGER_PORT=10000
      - CLUSTER_MONGO_URL=cluster_mongo_net
      - CLUSTER_MONGO_PORT=10108
    depends_on:
      - mongo_clusternet
      - mqtt

# Cluster Manager
  cluster_manager:
    image: ghcr.io/edgeio/edgeio/cluster-manager:v0.01.arm
    container_name: cluster_manager
    hostname: cluster_manager
    expose:
      - "10100"
      - "10101"
    ports:
      - "10100:10100"
      - "10101:10101"
    environment:
      - MY_PORT=10100
      - SYSTEM_MANAGER_URL=system_manager
      - SYSTEM_MANAGER_PORT=10000
      - CLUSTER_SERVICE_MANAGER_ADDR=cluster_service_manager
      - CLUSTER_SERVICE_MANAGER_PORT=10110
      - CLUSTER_MONGO_URL=cluster_mongo
      - CLUSTER_MONGO_PORT=10107
      - CLUSTER_SCHEDULER_URL=cluster_scheduler
      - CLUSTER_SCHEDULER_PORT=10105
      - MQTT_BROKER_URL=mqtt
      - MQTT_BROKER_PORT=10003
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_LOCATION=${CLUSTER_LOCATION}
    depends_on:
      - mongo_cluster
      - mqtt
      - cluster_scheduler
      - cluster_service_manager
      - system_manager


  # Cluster Scheduler
  cluster_scheduler:
    image: ghcr.io/edgeio/edgeio/cluster-scheduler:v0.01.arm
    container_name: cluster_scheduler
    hostname: cluster_scheduler
    expose:
      - "10105"
    ports:
      - "10105:10105"
    environment:
      - MY_PORT=10105
      - CLUSTER_MANAGER_URL=cluster_manager
      - CLUSTER_MANAGER_PORT=10100
      - CLUSTER_MONGO_URL=cluster_mongo
      - CLUSTER_MONGO_PORT=10107
      - REDIS_ADDR=redis://:clusterRedis@cluster_redis:6479
    depends_on:
      - cluster_redis
      - mongo_cluster


  # Redis for the Cluster Scheduler as Job Queue
  cluster_redis:
    image: redis
    hostname: cluster_redis
    container_name: cluster_redis
    ports:
      - "6479:6479"
    command: redis-server --requirepass clusterRedis --port 6479


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    ports:
      - 10009:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - cluster_manager

volumes:
  mongodb_data:
    driver: local
  mongodb_net_data:
    driver: local
  mongodb_cluster_data:
    driver: local
  mongodb_cluster_net_data:
    driver: local
