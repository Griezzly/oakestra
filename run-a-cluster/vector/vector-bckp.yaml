sources:
  in:
    type: "stdin"

transforms:
  remap_nodeengine_log:
    inputs:
      - "in"
    type:   "remap"
    source: |
      host = .host
      .= parse_regex(.message, r'^(?P<severity>\w+)-(?P<timestamp>\d+/\d+/\d+ \d+:\d+:\d+) (?P<code>[\w.:\d]+) (?P<action>[\w\s-]+) (?P<message>.*)$') ?? .
      .message = parse_json(.message) ?? .message
      .timestamp = parse_timestamp(.timestamp, "%Y/%m/%d %H:%M:%S") ?? now()
      .host = host
      .app = "nodeengine"
#      .= parse_regex(.message, r'^(?P<severity>\w+)-(?P<timestamp>\d+/\d+/\d+ \d+:\d+:\d+) (?P<code>[\w.:\d]+) (?P<action>[\w\s-]+) (?P<message>.*)$') ?? .
#      .message = parse_json(.message) ?? .message
#      .timestamp = parse_timestamp(.timestamp, "%Y/%m/%d %H:%M:%S") ?? now()
#      Parse most of NodeEngines logs
#      host = .host
#      .= parse_regex(.message, r'^(?P<severity>\w+)-(?P<timestamp>\d+/\d+/\d+ \d+:\d+:\d+) (?P<code>[\w.:\d]+) (?P<action>[\w\s-]+) (?P<message>.*)$') ?? .
#      .message = parse_json(.message) ?? .message
#      .timestamp = parse_timestamp(.timestamp, "%Y/%m/%d %H:%M:%S") ?? now()
#      .host="Test"+ host ?? ""



sinks:
#  out:
#    inputs:
#      - "in"
#    type: "console"
#    encoding:
#      codec: "json"
  loki:
    type: loki
    labels:
      source: nodeengine
      forwarder: vector
    encoding:
      codec: json
    inputs:
      - "remap_nodeengine_log"
    endpoint: http://192.168.1.77:3100
    out_of_order_action: "accept"